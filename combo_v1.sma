/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <hamsandwich>
#include <zombieplague>

new g_combo_hm[33], g_combo_zm[33]
new g_dmg[33], g_dmgtotal[33], g_hits[33]

new Float:A[33], Float:B

new g_hud

new g_dificultad_hm

new g_tiempo_espera

new g_comboadmin

new g_hora_feliz, g_hf, g_hf_empieza, g_hf_termina, g_hf_admin, g_hf_usuario

new g_red, g_green, g_blue, g_x, g_y, g_efecto

new SayText

#define dmg_req_hm(%1) (%1+1) * (215 + get_pcvar_num(g_dificultad_hm))

public plugin_init() {
	register_plugin("[ZP] sistema de combos", "1.6", "LuKks")
	
	register_event("HLTV", "Hora_feliz", "a", "1=0", "2=0")
	
	g_dificultad_hm = register_cvar("zp_combo_dif_hm", "0")
	
	g_comboadmin = register_cvar("zp_combo_admin", "1")
	
	g_tiempo_espera = register_cvar("zp_combo_tiempo", "5.0")
	
	g_hf = register_cvar("zp_combo_hora_feliz", "1")
	
	g_hf_empieza = register_cvar("zp_combo_hf_empieza", "22")
	g_hf_termina = register_cvar("zp_combo_hf_termina", "08")
	
	g_hf_usuario = register_cvar("zp_combo_hf_usuario", "1")
	g_hf_admin = register_cvar("zp_combo_hf_admin", "2")
	
	g_red = register_cvar("zp_combo_red", "235")
	g_green = register_cvar("zp_combo_green", "235")
	g_blue = register_cvar("zp_combo_blue", "235")
	
	g_x = register_cvar("zp_combo_x", "-1.0")
	g_y = register_cvar("zp_combo_y", "0.65")
	
	g_efecto = register_cvar("zp_combo_efecto", "0")
	
	RegisterHam(Ham_TakeDamage, "player", "take_damage")
	
	g_hud = CreateHudSyncObj()
	SayText = get_user_msgid("SayText")
}

public Hora_feliz() {
	if(get_pcvar_num(g_hf)) {
		static HoraObtenida[3], Hora
		
		get_time("%H", HoraObtenida, charsmax(HoraObtenida))
		Hora = str_to_num(HoraObtenida)
		
		if(get_pcvar_num(g_hf_termina) > Hora >= get_pcvar_num(g_hf_empieza)) {
			g_hora_feliz = true
			
			Msj(0, "^4[ZP]^3 Estamos en hora feliz, ganaras mas ammopacks al terminar el combo.")
		}
		else {
			g_hora_feliz = false
			
			Msj(0, "^4[ZP]^3 Horario de la hora feliz: ^4%d^3 a ^4%d^3.", get_pcvar_num(g_hf_empieza), get_pcvar_num(g_hf_termina))
		}
	}
}

public client_putinserver(id) {
	g_combo_hm[id] = g_dmg[id] = g_dmgtotal[id] = g_hits[id] = g_combo_zm[id] = 0
}

public client_disconnect(id) {
	remove_task(id)
	
	if(g_combo_hm[id] > 1 || g_combo_zm[id] > 0)
		combo_terminado(id)
}

public create_task_combo(id) {
	combeando(id)
	
	remove_task(id)
	set_task(get_pcvar_float(g_tiempo_espera), "combo_terminado", id)
}

public take_damage(victim, inflictor, attacker, Float:damage) {
	if(attacker != victim && is_user_connected(attacker) && is_user_connected(victim) && zp_get_user_zombie(victim)) {
		g_dmg[attacker] = floatround(damage)
		g_dmgtotal[attacker] += floatround(damage)
		g_hits[attacker]++
			
		while(g_dmgtotal[attacker] >= dmg_req_hm(g_combo_hm[attacker])) {
			g_combo_hm[attacker]++
			g_dmgtotal[attacker] = 0
		}
			
		B = get_gametime()
		
		if(A[attacker] < B) {
			A[attacker] = B+0.1
			
			create_task_combo(attacker)
			g_dmg[attacker] = 0
		}
	}
}

public zp_user_infected_post(id, infector) {
	g_combo_zm[infector]++
	create_task_combo(infector)
}

public combeando(id) {
	set_hudmessage(get_pcvar_num(g_red), get_pcvar_num(g_green), get_pcvar_num(g_blue), get_pcvar_float(g_x), get_pcvar_float(g_y), get_pcvar_num(g_efecto), 6.0, 4.0)
	
	if(!zp_get_user_zombie(id))
		ShowSyncHudMsg(id, g_hud, "Combo %s - Hits %s^nDaÃ±o %s^n%s / %s", addpoints(g_combo_hm[id]), addpoints(g_hits[id]), addpoints(g_dmg[id]), addpoints(g_dmgtotal[id]), addpoints(dmg_req_hm(g_combo_hm[id])))
	else if(g_combo_zm[id])
		ShowSyncHudMsg(id, g_hud, "Infecciones: %d", g_combo_zm[id])
}

public combo_terminado(id) {
	if(!is_user_connected(id))
		return
	
	if(is_user_bot(id))
		return
	
	static recompensa
	
	recompensa = ((!zp_get_user_zombie(id) ? g_combo_hm[id]-1 : g_combo_zm[id]+1) * (get_pcvar_num(g_comboadmin) ? (is_user_admin(id) ? 2 : 1) : 1)) + (g_hora_feliz ? (is_user_admin(id) ? get_pcvar_num(g_hf_admin) : get_pcvar_num(g_hf_usuario)) : 0)
	
	if(!zp_get_user_zombie(id)) {
		if(!g_combo_hm[id]) {
			return
		}
		else if(g_combo_hm[id] < 2) {
			Msj(id, "^4[ZP]^3 Debes hacer 2 combos o mas!")
			return
		}
	
		Msj(id, "^4[ZP]^3 Hiciste ^4%s^3 combos en ^4%d^3 hits ^1-^3 Ganaste ^4%s^3 ammopacks!%s", addpoints(g_combo_hm[id]), g_hits[id], addpoints(recompensa), g_hora_feliz ? " Extras APs por la hora feliz" : "")
		
		g_combo_hm[id] = g_dmg[id] = g_dmgtotal[id] = g_hits[id] = 0
	}
	else
	{
		if(!g_combo_zm[id]) {
			return
		}
		
		Msj(id, "^4[ZP]^3 Infectaste a ^4%d^3 humanos ^1-^3 Ganaste ^4%s^3 ammopacks!%s", g_combo_zm[id], addpoints(recompensa), g_hora_feliz ? " Extras APs por la hora feliz" : "")
		
		g_combo_zm[id] = 0
	}
	
	zp_set_user_ammo_packs(id, zp_get_user_ammo_packs(id) + recompensa)
}

stock addpoints(number) {
	new strpointed[15], c
	
	static str[15], len
	
	num_to_str(number, str, 14)
	
	len = strlen(str)
	
	for (new i=0;i<len;i++)
	{
		if (i!=0 && ((len-i)%3==0))
		{
			add(strpointed, 14, ".", 1)
			c++
			add(strpointed[i+c], 1, str[i], 1)
		}
		else add(strpointed[i+c], 1, str[i], 1)
	}
	
	return strpointed 
}

stock Msj(id, const input[], any:...) {
	static szMsg[161]
	
	vformat(szMsg, 160, input, 3)
	
	message_begin(id ? MSG_ONE_UNRELIABLE : MSG_BROADCAST, SayText, .player = id)
	write_byte(id ? id : 33)
	write_string(szMsg)
	message_end()
}
